{
  "version": 3,
  "sources": ["../src/wbecDevice.ts"],
  "sourcesContent": ["// noinspection JSUnusedGlobalSymbols\n\nimport axios from 'axios';\nimport {\n    BoxId, ErrorHandler, PvMode,\n    WbecChargeLogResponse,\n    WbecConfigResponse,\n    WbecJsonResponse,\n    WbecPvResponse,\n    WbecStatusResponse\n} from './wbecDeviceTypes';\n\nexport default class WbecDevice {\n    private readonly _host: string;\n    private _errorHandler: null|ErrorHandler = null;\n    private _errorBubbling: boolean = true;\n\n    constructor(host: string) {\n        this._host = host;\n    }\n\n    public setErrorHandler(onError: null | ErrorHandler, errorBubbling: boolean = false): void {\n        this._errorHandler = onError;\n        this._errorBubbling = errorBubbling;\n    }\n\n\n    get host(): string {\n        return 'http://' + this._host;\n    }\n\n    private async requestGet<T>(uri: string, config?: axios.AxiosRequestConfig<any>): Promise<T> {\n        return axios.get(`${this.host}${uri}`, {\n            timeout: 2000,\n            ...config,\n        })\n            .then(response => response.data)\n            .catch((reason) => {\n                if (this._errorHandler) {\n                    this._errorHandler(reason);\n                }\n                if (this._errorBubbling) {\n                    throw reason;\n                }\n            })\n        ;\n    }\n\n    private async requestGetJsonResponse<T>(uri: string): Promise<T> {\n        return this.requestGet(uri, {responseType: 'json'});\n    }\n\n    public async requestConfig(): Promise<WbecConfigResponse> {\n        return this.requestGetJsonResponse<WbecConfigResponse>(`/cfg`);\n    }\n\n    public async requestJson(id: BoxId | null = null): Promise<WbecJsonResponse> {\n        const idQuery = id !== null ? `?id=${id}` : '';\n        return this.requestGetJsonResponse<WbecJsonResponse>(`/json` + idQuery);\n    }\n\n    public async requestPv(): Promise<WbecPvResponse> {\n        return this.requestGetJsonResponse<WbecPvResponse>(`/pv`);\n    }\n\n    public async requestStatus(id: BoxId): Promise<WbecStatusResponse> {\n        return this.requestGetJsonResponse<WbecStatusResponse>(`/status?box=${id}`);\n    }\n\n    public async requestChargeLog(id: BoxId, length: number = 10): Promise<WbecChargeLogResponse> {\n        return this.requestGetJsonResponse<WbecChargeLogResponse>(`/chargelog?id=${id}&len=${length}`);\n    }\n\n    public async setPvValue(parameters: {pvWbId?: BoxId, pvWatt?: number, pvBatt?: number, pvMode?: PvMode}): Promise<WbecPvResponse> {\n        const queryParameters = [];\n        for (const valueKey in parameters) {\n            const value = parameters[valueKey as keyof typeof parameters];\n            queryParameters.push(`${valueKey}=${value}`);\n        }\n        const queryString = queryParameters.join('&');\n        console.log(queryString);\n        return this.requestGetJsonResponse<WbecPvResponse>(`/pv?${queryString}`);\n    }\n\n    public async setCurrentLimit(id: BoxId, currentLimit: number): Promise<WbecJsonResponse> {\n        const queryString = `?currLim=${currentLimit}&id=${id}`;\n        return this.requestGetJsonResponse<WbecJsonResponse>(`/json` + queryString);\n    }\n\n    public async reset(): Promise<void> {\n        await this.requestGet('/reset');\n    }\n\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAAkB;AAUlB,MAAO,WAAyB;AAAA,EACX;AAAA,EACT,gBAAmC;AAAA,EACnC,iBAA0B;AAAA,EAElC,YAAY,MAAc;AACtB,SAAK,QAAQ;AAAA,EACjB;AAAA,EAEO,gBAAgB,SAA8B,gBAAyB,OAAa;AACvF,SAAK,gBAAgB;AACrB,SAAK,iBAAiB;AAAA,EAC1B;AAAA,EAGA,IAAI,OAAe;AACf,WAAO,YAAY,KAAK;AAAA,EAC5B;AAAA,EAEA,MAAc,WAAc,KAAa,QAAoD;AACzF,WAAO,aAAAA,QAAM,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,IAAI;AAAA,MACnC,SAAS;AAAA,MACT,GAAG;AAAA,IACP,CAAC,EACI,KAAK,cAAY,SAAS,IAAI,EAC9B,MAAM,CAAC,WAAW;AACf,UAAI,KAAK,eAAe;AACpB,aAAK,cAAc,MAAM;AAAA,MAC7B;AACA,UAAI,KAAK,gBAAgB;AACrB,cAAM;AAAA,MACV;AAAA,IACJ,CAAC;AAAA,EAET;AAAA,EAEA,MAAc,uBAA0B,KAAyB;AAC7D,WAAO,KAAK,WAAW,KAAK,EAAC,cAAc,OAAM,CAAC;AAAA,EACtD;AAAA,EAEA,MAAa,gBAA6C;AACtD,WAAO,KAAK,uBAA2C,MAAM;AAAA,EACjE;AAAA,EAEA,MAAa,YAAY,KAAmB,MAAiC;AACzE,UAAM,UAAU,OAAO,OAAO,OAAO,EAAE,KAAK;AAC5C,WAAO,KAAK,uBAAyC,UAAU,OAAO;AAAA,EAC1E;AAAA,EAEA,MAAa,YAAqC;AAC9C,WAAO,KAAK,uBAAuC,KAAK;AAAA,EAC5D;AAAA,EAEA,MAAa,cAAc,IAAwC;AAC/D,WAAO,KAAK,uBAA2C,eAAe,EAAE,EAAE;AAAA,EAC9E;AAAA,EAEA,MAAa,iBAAiB,IAAW,SAAiB,IAAoC;AAC1F,WAAO,KAAK,uBAA8C,iBAAiB,EAAE,QAAQ,MAAM,EAAE;AAAA,EACjG;AAAA,EAEA,MAAa,WAAW,YAA0G;AAC9H,UAAM,kBAAkB,CAAC;AACzB,eAAW,YAAY,YAAY;AAC/B,YAAM,QAAQ,WAAW,QAAmC;AAC5D,sBAAgB,KAAK,GAAG,QAAQ,IAAI,KAAK,EAAE;AAAA,IAC/C;AACA,UAAM,cAAc,gBAAgB,KAAK,GAAG;AAC5C,YAAQ,IAAI,WAAW;AACvB,WAAO,KAAK,uBAAuC,OAAO,WAAW,EAAE;AAAA,EAC3E;AAAA,EAEA,MAAa,gBAAgB,IAAW,cAAiD;AACrF,UAAM,cAAc,YAAY,YAAY,OAAO,EAAE;AACrD,WAAO,KAAK,uBAAyC,UAAU,WAAW;AAAA,EAC9E;AAAA,EAEA,MAAa,QAAuB;AAChC,UAAM,KAAK,WAAW,QAAQ;AAAA,EAClC;AAEJ;",
  "names": ["axios"]
}
