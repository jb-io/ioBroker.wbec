{
  "version": 3,
  "sources": ["../src/wbecDevice.ts"],
  "sourcesContent": ["// noinspection JSUnusedGlobalSymbols\n\nimport axios from 'axios';\nimport {\n    BoxId, PvMode,\n    WbecChargeLogResponse,\n    WbecConfigResponse,\n    WbecJsonResponse,\n    WbecPvResponse,\n    WbecStatusResponse\n} from './wbecDeviceTypes';\n\nexport default class WbecDevice {\n    private readonly _host: string;\n\n    constructor(host: string) {\n        this._host = host;\n    }\n\n\n    get host(): string {\n        return 'http://' + this._host;\n    }\n\n    public async requestConfig(): Promise<WbecConfigResponse> {\n        const response = await axios.get(this.host + '/cfg', {responseType: 'json'})\n        return response.data as WbecConfigResponse;\n    }\n\n    private async requestGet<T>(uri: string): Promise<T> {\n        const response = await axios.get(`${this.host}${uri}`, {responseType: 'json'});\n        return response.data;\n    }\n\n    public async requestJson(id: BoxId | null = null): Promise<WbecJsonResponse> {\n        const idQuery = id !== null ? `?id=${id}` : '';\n        return this.requestGet<WbecJsonResponse>(`/json` + idQuery);\n    }\n\n    public async requestPv(): Promise<WbecPvResponse> {\n        return this.requestGet<WbecPvResponse>(`/pv`);\n    }\n\n    public async requestStatus(id: BoxId): Promise<WbecStatusResponse> {\n        return this.requestGet<WbecStatusResponse>(`/status?box=${id}`);\n    }\n\n    public async requestChargeLog(id: BoxId, length: number = 10): Promise<WbecChargeLogResponse> {\n        return this.requestGet<WbecChargeLogResponse>(`/chargelog?id=${id}&len=${length}`);\n    }\n\n    public async setPvValue(parameters: {pvWbId?: BoxId, pvWatt?: number, pvBatt?: number, pvMode?: PvMode}): Promise<WbecPvResponse> {\n        const queryParameters = [];\n        for (const valueKey in parameters) {\n            const value = parameters[valueKey as keyof typeof parameters];\n            queryParameters.push(`${valueKey}=${value}`);\n        }\n        const queryString = queryParameters.join('&');\n        console.log(queryString);\n        return this.requestGet<WbecPvResponse>(`/pv?${queryString}`);\n    }\n\n    public async setCurrentLimit(id: BoxId, currentLimit: number): Promise<WbecJsonResponse> {\n        const queryString = `?currLim=${currentLimit}&id=${id}`;\n        return this.requestGet<WbecJsonResponse>(`/json` + queryString);\n    }\n\n    public async reset(): Promise<void> {\n        await axios.get(this.host + '/reset');\n    }\n\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAAkB;AAUlB,MAAO,WAAyB;AAAA,EACX;AAAA,EAEjB,YAAY,MAAc;AACtB,SAAK,QAAQ;AAAA,EACjB;AAAA,EAGA,IAAI,OAAe;AACf,WAAO,YAAY,KAAK;AAAA,EAC5B;AAAA,EAEA,MAAa,gBAA6C;AACtD,UAAM,WAAW,MAAM,aAAAA,QAAM,IAAI,KAAK,OAAO,QAAQ,EAAC,cAAc,OAAM,CAAC;AAC3E,WAAO,SAAS;AAAA,EACpB;AAAA,EAEA,MAAc,WAAc,KAAyB;AACjD,UAAM,WAAW,MAAM,aAAAA,QAAM,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,IAAI,EAAC,cAAc,OAAM,CAAC;AAC7E,WAAO,SAAS;AAAA,EACpB;AAAA,EAEA,MAAa,YAAY,KAAmB,MAAiC;AACzE,UAAM,UAAU,OAAO,OAAO,OAAO,EAAE,KAAK;AAC5C,WAAO,KAAK,WAA6B,UAAU,OAAO;AAAA,EAC9D;AAAA,EAEA,MAAa,YAAqC;AAC9C,WAAO,KAAK,WAA2B,KAAK;AAAA,EAChD;AAAA,EAEA,MAAa,cAAc,IAAwC;AAC/D,WAAO,KAAK,WAA+B,eAAe,EAAE,EAAE;AAAA,EAClE;AAAA,EAEA,MAAa,iBAAiB,IAAW,SAAiB,IAAoC;AAC1F,WAAO,KAAK,WAAkC,iBAAiB,EAAE,QAAQ,MAAM,EAAE;AAAA,EACrF;AAAA,EAEA,MAAa,WAAW,YAA0G;AAC9H,UAAM,kBAAkB,CAAC;AACzB,eAAW,YAAY,YAAY;AAC/B,YAAM,QAAQ,WAAW,QAAmC;AAC5D,sBAAgB,KAAK,GAAG,QAAQ,IAAI,KAAK,EAAE;AAAA,IAC/C;AACA,UAAM,cAAc,gBAAgB,KAAK,GAAG;AAC5C,YAAQ,IAAI,WAAW;AACvB,WAAO,KAAK,WAA2B,OAAO,WAAW,EAAE;AAAA,EAC/D;AAAA,EAEA,MAAa,gBAAgB,IAAW,cAAiD;AACrF,UAAM,cAAc,YAAY,YAAY,OAAO,EAAE;AACrD,WAAO,KAAK,WAA6B,UAAU,WAAW;AAAA,EAClE;AAAA,EAEA,MAAa,QAAuB;AAChC,UAAM,aAAAA,QAAM,IAAI,KAAK,OAAO,QAAQ;AAAA,EACxC;AAEJ;",
  "names": ["axios"]
}
